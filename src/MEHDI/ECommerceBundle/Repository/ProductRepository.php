<?php

namespace MEHDI\ECommerceBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{
	public function countProductWithCategory($categoryId){
		$qb=$this->createQueryBuilder('p');//permet de construire une requÃªte
		$qb->select('count(p.id)');
		$qb->join('p.category','c');
		$qb->where('c.id = :id');
		
		return $qb
			->getQuery()
			->setParameter('id',$categoryId)
			->getSingleScalarResult();
		
	}
	
	public function getProductsByUser($page, $nbPerPage, $userId){
		$query=$this->createQueryBuilder('p')
			->leftJoin('p.image', 'i')
			->addSelect('i')
			->leftJoin('p.category', 'c')
			->addSelect('c')
			->join('p.user', 'u')
			->where('u.id = :id')
			->orderBy('p.dateAjout', 'DESC')
			->getQuery()
			->setParameter('id',$userId)
		;
		
		$query
			->setFirstResult(($page-1)*$nbPerPage)
			->setMaxResults($nbPerPage)
		;

	return new Paginator($query, true);
	}
	
	
	
}
